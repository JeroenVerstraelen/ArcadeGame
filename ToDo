Tests
======
class ArcadeGameTest: public ::testing::Test
Minimum of 1 test per normal scenario.
Tests by invoking macro TEST_F
int main(int argc, char **argv){
	::testing::InitGoogleTest(&argc, argv);
	return RUN_ALL_TESTS();
}

Contracts
==========
REQUIRE	and ENSURE in the code itself.
• Controleer de waardes van de argumenten
 
die je binnenkrijgt (PRE) --> REQUIRE(<boolse expressie>, <boodschap>)
• Controleer de waarde van het resultaat dat
je teruggeeft (POST) --> ENSURE(<boolse expressie>, <boodschap>) 
(Naamconventie: use return with post condition)

Use public declarations only. (Other modules need to acces it)
Use properlyInitialized.

Write a test for ContractViolations (Use comments)
	- Write tests with illegal values
	- Use EXPECT_DEATH to verify








Plan
======
Not required






Tips
=====
Objectgericht ontwerp
Data encapsulatie
Geen Magic Nummers
